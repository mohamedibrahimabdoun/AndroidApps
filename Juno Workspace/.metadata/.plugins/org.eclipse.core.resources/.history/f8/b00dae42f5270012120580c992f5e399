package com.salescare.pkg;

import org.ksoap2.SoapEnvelope;
import org.ksoap2.serialization.MarshalBase64;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapSerializationEnvelope;
import org.ksoap2.transport.HttpTransportSE;
import android.widget.Toast;

public class DataRegWebServices {
	
 //public Object result = null;
	String MSISDN;
	String NAME;
	String ADDRESS;
	String SERAIL;
	String IMSI;
	String FrontImageName;
	String BackImageName;
	long idType;
	byte[] FrontImage;
	byte[] BackImage;
	 /*
    String ADDRESS, @WebParam(name = "SERAIL")
String SERAIL, @WebParam(name = "FrontImageName")
String FrontImageName, @WebParam(name = "BackImageName")
String BackImageName, @WebParam(name = "IMSI")
String IMSI, @WebParam(name = "idType")
Long idType, @WebParam(name = "FrontImage")
byte[] FrontImage, @WebParam(name = "BackImage")
byte[] BackImage) {

*/
	public Object SaveDataWS(String URL, String NAMESPACE,
			String METHOD_NAME, String SOAP_ACTION)
	{ try 
	 {
	 SoapObject request = new SoapObject(NAMESPACE, METHOD_NAME);
	 SoapSerializationEnvelope envelope = new SoapSerializationEnvelope(SoapEnvelope.VER11); 
	 // Newly Added for Serialization new
	 new MarshalBase64().register(envelope);
	 envelope.encodingStyle =SoapEnvelope.ENC;
	 
	 request.addProperty("MSISDN", MSISDN);
	 request.addProperty("NAME",NAME);
	 request.addProperty("ADDRESS", ADDRESS);
	 request.addProperty("SERAIL", SERAIL);
	 request.addProperty("FrontImageName", FrontImageName);
	 request.addProperty("BackImageName", BackImageName);
	 request.addProperty("idType", idType); 
	 request.addProperty("IMSI",IMSI); 
	 request.addProperty("FrontImage", FrontImage); 
	 request.addProperty("BackImage", BackImage);
	 
	 envelope.setOutputSoapObject(request); 
	 HttpTransportSE androidHttpTransport = new HttpTransportSE( URL);
	 androidHttpTransport.call(SOAP_ACTION, envelope); 
	 Object result = envelope.getResponse(); 
	 Toast.makeText(null, " " + result, Toast.LENGTH_LONG).show(); 
	 } catch (Exception E) {
	 E.printStackTrace();
	 Toast.makeText(null,"Save_btn : ERROR" + E.getClass().getName() + ":" + E.getMessage(),
	 Toast.LENGTH_LONG).show();
	 return result;
	 }
}
	
	public Object SendWebService(String URL, String NAMESPACE,
			String METHOD_NAME, String SOAP_ACTION) {

		try {
			SoapObject request = new SoapObject(NAMESPACE, METHOD_NAME);

			/*request.addProperty("POSNAME", POSNAME);
			request.addProperty("OWNER", OWNER);
			request.addProperty("MOBILE", MOBILE);
			request.addProperty("ADDRESS", ADDRESS);

			request.addProperty("IMEI", IMEI);
			request.addProperty("DATE", DATE);

			request.addProperty("BRAND", BRAND);
			request.addProperty("POTYPES", POSTYPE);
			request.addProperty("STOCK", STOCK);
		*/
			SoapSerializationEnvelope envelope = new SoapSerializationEnvelope(
					SoapEnvelope.VER11);
			envelope.setOutputSoapObject(request);
			HttpTransportSE androidHttpTransport = new HttpTransportSE(URL);
			androidHttpTransport.call(SOAP_ACTION, envelope);
		//	result = envelope.getResponse();
	
		} catch (Exception E) {
			E.printStackTrace();
			System.out.print("ERROR" + E.getClass().getName() + E.getMessage());
			Toast.makeText(null,
					"ERROR" + E.getClass().getName() + ":" + E.getMessage(),
					Toast.LENGTH_LONG);
		}
		return null;

	}

}
